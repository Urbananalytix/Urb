"use strict";

const util = require("util");
const { Base, populateLocation, csvExtractor } = require("./base");
const extractOnspdVal = csvExtractor(require("../../data/onspd_schema.json"));
const async = require("async");
const Pc = require("postcode");

const DemographicsSchema = {
    postcode: "varchar",
    pc_compact: "varchar",
    population: "integer",
    households: "integer",
    population_over_16: "integer",
    employed_16_to74: "integer",
    male: "integer",
    female: "integer",
    lives_in_a_household: "integer",
    lives_in_a_communal_establishment: "integer",
    area_hectares: "integer",
    density: "integer",
    age_0_to_4: "integer",
    age_5_to_9: "integer",
    age_10_to_14: "integer",
    age_15_to_19: "integer",
    age_20_to_24: "integer",
    age_25_to_29: "integer",
    age_30_to_44: "integer",
    age_45_to_59: "integer",
    age_60_to_64: "integer",
    age_65_to_74: "integer",
    age_75_to_84: "integer",
    age_85_to_89: "integer",
    age_90_and_over: "integer",
    status_single: "integer",
    status_married: "integer",
    status_civil_partnership: "integer",
    status_separated: "integer",
    status_divorced: "integer",
    status_widowed: "integer",
    ethnicity_white_british_and_irish: "integer",
    ethnicity_white_other_white: "integer",
    ethnicity_mixed: "integer",
    ethnicity_indian: "integer",
    ethnicity_pakistani: "integer",
    ethnicity_bangladeshi: "integer",
    ethnicity_chinese: "integer",
    ethnicity_other_asian: "integer",
    ethnicity_black_african_caribbean_black_british: "integer",
    ethnicity_arab: "integer",
    region_of_birth_united_kingdom: "integer",
    region_of_birth_ireland: "integer",
    region_of_birth_eu_founder: "integer",
    region_of_birth_eu_later: "integer",
    region_of_birth_other_countries: "integer",
    living_in_a_couple_married: "integer",
    living_in_a_couple_cohabiting_opposite_sex: "integer",
    living_in_a_couple_cohabiting_same_sex: "integer",
    not_living_in_a_couple_single: "integer",
    not_living_in_a_couple_married: "integer",
    not_living_in_a_couple_separated: "integer",
    not_living_in_a_couple_divorced: "integer",
    not_living_in_a_couple_widowed: "integer",
    one_person_household_aged_65_and_over: "integer",
    one_person_household_other: "integer",
    one_family_all_aged_65_and_over: "integer",
    family_married_no_children: "integer",
    family_married_dependent_children: "integer",
    family_married_all_children_non_dependent: "integer",
    family_cohabiting_couple_no_children: "integer",
    family_cohabiting_couple_dependent_children: "integer",
    family_cohabiting_couple_all_children_non_dependent: "integer",
    family_lone_parent_dependent_children: "integer",
    family_lone_parent_all_children_non_dependent: "integer",
    other_household_types_with_dependent_children: "integer",
    other_household_types_all_full_time_students: "integer",
    other_household_types_all_aged_65_and_over: "integer",
    other_household_types_other: "integer",
    no_adults_in_employment_in_household_with_dependent_children: "integer",
    no_adults_in_employment_in_household_no_dependent_children: "integer",
    lone_parent_in_part_time_employment_total: "integer",
    lone_parent_in_full_time_employment_total: "integer",
    lone_parent_not_in_employment_total: "integer",
    housing_housing_type_detached: "integer",
    housing_housing_type_semi_detached: "integer",
    housing_housing_type_terraced: "integer",
    housing_housing_type_flats: "integer",
    housing_housing_type_caravan_: "integer",
    housing_housing_ownership_owned_and_shared_ownership: "integer",
    housing_housing_ownership_social_rented: "integer",
    housing_housing_ownership_private_rented: "integer",
    housing_housing_ownership_living_rent_free: "integer",
    health_and_care_very_good_health: "integer",
    health_and_care_good_health: "integer",
    health_and_care_fair_health: "integer",
    health_and_care_bad_health: "integer",
    health_and_care_very_bad_health: "integer",
    health_and_care_provides_unpaid_care: "integer",
    education_no_qualifications: "integer",
    education_highest_level_of_qualification_level_1_level_2_or_app: "integer",
    education_highest_level_of_qualification_level_3_qualifications: "integer",
    education_highest_level_of_qualification_level_4_qualifications: "integer",
    education_schoolchildren_and_full_time_students_age_16_and_over: "integer",
    vehicle_availability_no_cars_or_vans_in_household: "integer",
    vehicle_availability_1_car_or_van_in_household: "integer",
    vehicle_availability_2_or_more_cars_or_vans_in_household: "integer",
    travel_to_work_work_mainly_at_or_from_home: "integer",
    travel_to_work_public_transport: "integer",
    travel_to_work_private_transport: "integer",
    travel_to_work_on_foot_bicycle_or_other: "integer",
    employment_employee_part_time: "integer",
    employment_employee_full_time: "integer",
    employment_self_employed: "integer",
    employment_unemployed: "integer",
    employment_full_time_student: "integer",
    employment_retired: "integer",
    employment_student: "integer",
    employment_looking_after_home_or_family: "integer",
    employment_long_term_sick_or_disabled: "integer",
    employment_other: "integer",
    employment_unemployed_age_16_to_24: "integer",
    employment_unemployed_age_50_to_74: "integer",
    employment_unemployed_never_worked: "integer",
    employment_long_term_unemployed: "integer",
    employment_hours_part_time_15_hours_or_less_worked: "integer",
    employment_hours_part_time_16_to_30_hours_worked: "integer",
    employment_hours_full_time_31_to_48_hours_worked: "integer",
    employment_hours_full_time_49_or_more_hours_worked: "integer",
    emp_ind_agriculture_forestry_and_fishing: "integer",
    emp_ind_mining_and_quarrying: "integer",
    emp_ind_manufacturing: "integer",
    emp_ind_electricity_gas_steam_and_air_conditioning_supply: "integer",
    emp_ind_water_supply_sewerage_waste_management: "integer",
    emp_ind_construction: "integer",
    emp_ind_repair_of_motor_vehicles_and_motor_cycles: "integer",
    emp_ind_transport_and_storage: "integer",
    emp_ind_accommodation_and_food_service_activities: "integer",
    emp_ind_information_and_communication: "integer",
    emp_ind_financial_and_insurance_activities: "integer",
    emp_ind_real_estate_activities: "integer",
    emp_ind_professional_scientific_and_technical_activities: "integer",
    emp_ind_administrative_and_support_service_activities: "integer",
    emp_ind_public_administration_and_defence: "integer",
    emp_ind_education: "integer",
    emp_ind_human_health_and_social_work_activities: "integer",
    emp_ind_other_industry: "integer",
    emp_type__managers_directors_and_senior_officials: "integer",
    emp_type__professional_occupations: "integer",
    emp_type__associate_professional_and_technical_occupations: "integer",
    emp_type__administrative_and_secretarial_occupations: "integer",
    emp_type__skilled_trades_occupations: "integer",
    emp_type__caring_leisure_and_other_service_occupations: "integer",
    emp_type__sales_and_customer_service_occupations: "integer",
    emp_type__process_plant_and_machine_operatives: "integer",
    emp_type__elementary_occupations: "integer",
    social_grade_ab: "integer",
    social_grade_c1: "integer",
    social_grade_c2: "integer",
    social_grade_de: "integer",
    urbananalytix_wealthscore: "integer",
    geodemographic_classification: "varchar",
    geodemographic_supergroup: "varchar",
    geodemographic_subgroup: "varchar",
    local_authority: "varchar",
    area_of_uk: "varchar",
    area_classification: "varchar", 
};

const indexes = [
  {
    unique: true,
    column: "pc_compact",
  },
];

function Demographics() {
  this.idCache = {};
  Base.call(this, "demographics", DemographicsSchema, indexes);
}

util.inherits(Demographics, Base);

const findQuery = `
	SELECT *
	FROM 
		demographics 
	WHERE pc_compact=$1
`;

Demographics.prototype.find = function(postcode, callback) {
  if (typeof postcode !== "string") return callback(null, null);
  postcode = postcode.trim().toUpperCase();
  if (!new Pc(postcode).valid()) return callback(null, null);
  this._query(findQuery, [postcode.replace(/\s/g, "")], (error, result) => {
    if (error) return callback(error, null);
    if (result.rows.length === 0) return callback(null, null);
    callback(null, result.rows[0]);
  });
};

Demographics.prototype.whitelistedAttributes = [
    "postcode",
    "population",
    "households",
    "population_over_16",
    "employed_16_to74",
    "male",
    "female",
    "lives_in_a_household",
    "lives_in_a_communal_establishment",
    "area_hectares",
    "density",
    "age_0_to_4",
    "age_5_to_9",
    "age_10_to_14",
    "age_15_to_19",
    "age_20_to_24",
    "age_25_to_29",
    "age_30_to_44",
    "age_45_to_59",
    "age_60_to_64",
    "age_65_to_74",
    "age_75_to_84",
    "age_85_to_89",
    "age_90_and_over",
    "status_single",
    "status_married",
    "status_civil_partnership",
    "status_separated",
    "status_divorced",
    "status_widowed",
    "ethnicity_white_british_and_irish",
    "ethnicity_white_other_white",
    "ethnicity_mixed",
    "ethnicity_indian",
    "ethnicity_pakistani",
    "ethnicity_bangladeshi",
    "ethnicity_chinese",
    "ethnicity_other_asian",
    "ethnicity_black_african_caribbean_black_british",
    "ethnicity_arab",
    "region_of_birth_united_kingdom",
    "region_of_birth_ireland",
    "region_of_birth_eu_founder",
    "region_of_birth_eu_later",
    "region_of_birth_other_countries",
    "living_in_a_couple_married",
    "living_in_a_couple_cohabiting_opposite_sex",
    "living_in_a_couple_cohabiting_same_sex",
    "not_living_in_a_couple_single",
    "not_living_in_a_couple_married",
    "not_living_in_a_couple_separated",
    "not_living_in_a_couple_divorced",
    "not_living_in_a_couple_widowed",
    "one_person_household_aged_65_and_over",
    "one_person_household_other",
    "one_family_all_aged_65_and_over",
    "family_married_no_children",
    "family_married_dependent_children",
    "family_married_all_children_non_dependent",
    "family_cohabiting_couple_no_children",
    "family_cohabiting_couple_dependent_children",
    "family_cohabiting_couple_all_children_non_dependent",
    "family_lone_parent_dependent_children",
    "family_lone_parent_all_children_non_dependent",
    "other_household_types_with_dependent_children",
    "other_household_types_all_full_time_students",
    "other_household_types_all_aged_65_and_over",
    "other_household_types_other",
    "no_adults_in_employment_in_household_with_dependent_children",
    "no_adults_in_employment_in_household_no_dependent_children",
    "lone_parent_in_part_time_employment_total",
    "lone_parent_in_full_time_employment_total",
    "lone_parent_not_in_employment_total",
    "housing_housing_type_detached",
    "housing_housing_type_semi_detached",
    "housing_housing_type_terraced",
    "housing_housing_type_flats",
    "housing_housing_type_caravan_",
    "housing_housing_ownership_owned_and_shared_ownership",
    "housing_housing_ownership_social_rented",
    "housing_housing_ownership_private_rented",
    "housing_housing_ownership_living_rent_free",
    "health_and_care_very_good_health",
    "health_and_care_good_health",
    "health_and_care_fair_health",
    "health_and_care_bad_health",
    "health_and_care_very_bad_health",
    "health_and_care_provides_unpaid_care",
    "education_no_qualifications",
    "education_highest_level_of_qualification_level_1_level_2_or_app",
    "education_highest_level_of_qualification_level_3_qualifications",
    "education_highest_level_of_qualification_level_4_qualifications",
    "education_schoolchildren_and_full_time_students_age_16_and_over",
    "vehicle_availability_no_cars_or_vans_in_household",
    "vehicle_availability_1_car_or_van_in_household",
    "vehicle_availability_2_or_more_cars_or_vans_in_household",
    "travel_to_work_work_mainly_at_or_from_home",
    "travel_to_work_public_transport",
    "travel_to_work_private_transport",
    "travel_to_work_on_foot_bicycle_or_other",
    "employment_employee_part_time",
    "employment_employee_full_time",
    "employment_self_employed",
    "employment_unemployed",
    "employment_full_time_student",
    "employment_retired",
    "employment_student",
    "employment_looking_after_home_or_family",
    "employment_long_term_sick_or_disabled",
    "employment_other",
    "employment_unemployed_age_16_to_24",
    "employment_unemployed_age_50_to_74",
    "employment_unemployed_never_worked",
    "employment_long_term_unemployed",
    "employment_hours_part_time_15_hours_or_less_worked",
    "employment_hours_part_time_16_to_30_hours_worked",
    "employment_hours_full_time_31_to_48_hours_worked",
    "employment_hours_full_time_49_or_more_hours_worked",
    "emp_ind_agriculture_forestry_and_fishing",
    "emp_ind_mining_and_quarrying",
    "emp_ind_manufacturing",
    "emp_ind_electricity_gas_steam_and_air_conditioning_supply",
    "emp_ind_water_supply_sewerage_waste_management",
    "emp_ind_construction",
    "emp_ind_repair_of_motor_vehicles_and_motor_cycles",
    "emp_ind_transport_and_storage",
    "emp_ind_accommodation_and_food_service_activities",
    "emp_ind_information_and_communication",
    "emp_ind_financial_and_insurance_activities",
    "emp_ind_real_estate_activities",
    "emp_ind_professional_scientific_and_technical_activities",
    "emp_ind_administrative_and_support_service_activities",
    "emp_ind_public_administration_and_defence",
    "emp_ind_education",
    "emp_ind_human_health_and_social_work_activities",
    "emp_ind_other_industry",
    "emp_type__managers_directors_and_senior_officials",
    "emp_type__professional_occupations",
    "emp_type__associate_professional_and_technical_occupations",
    "emp_type__administrative_and_secretarial_occupations",
    "emp_type__skilled_trades_occupations",
    "emp_type__caring_leisure_and_other_service_occupations",
    "emp_type__sales_and_customer_service_occupations",
    "emp_type__process_plant_and_machine_operatives",
    "emp_type__elementary_occupations",
    "social_grade_ab",
    "social_grade_c1",
    "social_grade_c2",
    "social_grade_de",
    "urbananalytix_wealthscore",
    "geodemographic_classification",
    "geodemographic_supergroup",
    "geodemographic_subgroup",
    "local_authority",
    "area_of_uk",
    "area_classification",
];

/**
 * Turn terminated postcode data into json object
 * @param  {Object} Demographics - Raw instance of terminated postcode data
 * @return {Object}                    - Terminated postcode object containing only whitelisted attributes
 */
Demographics.prototype.toJson = function(Demographics) {
  return this.whitelistedAttributes.reduce((acc, attr) => {
    acc[attr] = Demographics[attr];
    return acc;
  }, {});
};



module.exports = new Demographics();
